# More documentation about how to customize your build
# can be found here:
# https://docs.fastlane.tools
fastlane_version "2.68.0"

# This value helps us track success metrics for Fastfiles
# we automatically generate. Feel free to remove this line
# once you get things running smoothly!
generated_fastfile_id "890b50e8-e106-4f84-ac3e-f6a53224abeb"

default_platform :android

# Fastfile actions accept additional configuration, but
# don't worry, fastlane will prompt you for required
# info which you can add here later

release_version_number = nil

before_all do
    release_version_number = sh "(cat ../../package.json | grep version | head -1 | awk -F: '{ print $2 }' | sed 's/[\",]//g' | tr -d '[[:space:]]')"
end

lane :build do
  # build the release variant
  keyAlias = get_properties_value( key: "keyAlias", path: "app/keystores/keystore.properties" )
      keyPassword = get_properties_value( key: "keyPassword", path: "app/keystores/keystore.properties")
      storePassword = get_properties_value( key: "storePassword", path: "app/keystores/keystore.properties")
      path = File.expand_path(File.dirname(__FILE__)) + '/../app/keystores/release.keystore'
      gradle(task: 'clean')
      gradle(
        task: 'assemble',
        build_type: 'Release',
        properties: {
            "android.injected.signing.store.file" => path,
            "android.injected.signing.store.password" => storePassword,
            "android.injected.signing.key.alias" => keyAlias,
            "android.injected.signing.key.password" => keyPassword,
          }
      )
end

desc 'bump version [major|minor|patch]'
  lane :bump_version do |options|
    sh "yarn version --#{options[:type]} --no-git-tag-version"
  end

lane :store do
  # build the release variant
  build_android_app(task: "assembleRelease")

  # upload to Google Play
  supply(
    track: "beta",
    package_name:"com.krosconapp",
    skip_upload_images: true,
    skip_upload_screenshots: true,
  )

end


desc 'Build and upload to App Center.'
lane :appcenter do
build
apiToken = get_properties_value( key: "apiKey", path: "app/keystores/appcenter.properties" )
appcenter_upload(
    api_token:apiToken,
    owner_name: "bartlomiejzimny",
    app_name: "KrosconApp",
    apk: "app/build/outputs/apk/release/app-release.apk"
    )
end

  desc "Deploy a new version to the Google Play"
  lane :deploy do
    gradle(task: "clean assembleRelease")
    upload_to_play_store
  end

